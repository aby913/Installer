name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.4

      - name: Install x86_64 cross-compiler
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Install ARM cross-compiler
        run: sudo apt-get update && sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.1.0
        with:
          distribution: goreleaser
          version: v1.18.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update
        run: |
          sudo apt update && sudo apt install tree -y

      - name: Show
        run: |
          pwd && ls

      - name: Show1
        run: |
          tree ./output/

      - name: Upload Amd64 Artifact
        uses: actions/upload-artifact@v3
        with:
          name: olares-win-amd64
          path: ./output/olares-cli_windows_amd64_v1/olares-cli.exe

      - name: Upload Arm64 Artifact
        uses: actions/upload-artifact@v3
        with:
          name: olares-win-arm64
          path: ./output/olares-cli_windows_arm64/olares-cli.exe

      # - name: Upload to S3
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: "us-east-1"
      #   run: |
      #     cd output && for file in *.tar.gz; do
      #       aws s3 cp "$file" s3://terminus-os-install/$file --acl=public-read
      #     done

  signing:
    needs: [goreleaser]
    runs-on: windows-latest
    steps:
      - name: Download Amd64 Artifact
        uses: actions/download-artifact@v3
        with:
          name: olares-win-amd64
          path: ./amd64/

      - name: Download Arm64 Artifact
        uses: actions/download-artifact@v3
        with:
          name: olares-win-arm64
          path: ./arm64/

      - name: Show
        run: |
          gci
        continue-on-error: true

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Install Windows SDK
        run: |
          choco install windows-sdk-10-version-1903-all -y

      - name: Run signtool1
        run: |
          cd /; cd '.\Program Files (x86)\Windows Kits\10\bin\'; gci
        continue-on-error: true

      # - name: Run signtool2
      #   run: |
      #     signtool sign /?
      #   continue-on-error: true

      - name: DDD
        run: |
          Get-ChildItem -Path .\ -Recurse -File
