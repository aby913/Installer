name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
jobs:
  extract_tag:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.extract_tag.outputs.tag_name }}
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3

      - name: Extract tag name
        id: extract_tag
        run: echo "::set-output name=tag_name::${GITHUB_REF##*/}"

  compile:
    runs-on: ubuntu-latest
    needs: extract_tag
    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.4

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.1.0
        with:
          distribution: goreleaser
          version: v1.18.2
          args: release --clean

      - name: Upload to Self Hosted
        uses: actions/upload-artifact@v3
        with:
          name: self-hosted-${{ needs.extract_tag.outputs.tag_name }}
          path: |
            ./scripts/create-cert.ps1
            ./output/olares-cli_windows_amd64_v1/*
            ./output/olares-cli_windows_arm64/*

      - name: Upload to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cli-upload-${{ needs.extract_tag.outputs.tag_name }}
          path: |
            ./output/*.tar.gz
            ./output/*.zip

  signing:
    runs-on: self-hosted
    needs: [extract_tag, compile]

    steps:
      - name: Download Cli
        uses: actions/download-artifact@v3
        with:
          name: self-hosted-${{ needs.extract_tag.outputs.tag_name }}
          path: ./${{ needs.extract_tag.outputs.tag_name }}/

      - name: "Signing"
        run: |
          .\${{ needs.extract_tag.outputs.tag_name }}\scripts\create-cert.ps1 "${{ needs.extract_tag.outputs.tag_name }}"

      - name: "Upload Signed"
        uses: actions/upload-artifact@v3
        with:
          name: signed-${{ needs.extract_tag.outputs.tag_name }}
          path: |
            .\${{ needs.extract_tag.outputs.tag_name }}\output\*.zip

      # - name: "Delete Cache Files"
      #   run: |
      #     Remove-Item -Path .\${{ needs.extract_tag.outputs.tag_name }}\output -Recurse -Force
      #   continue-on-error: true

  release:
    runs-on: ubuntu-latest
    needs: [extract_tag, signing]

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: cli-upload-${{ needs.extract_tag.outputs.tag_name }}
          path: ./

      - name: Download Signed # todo if failed
        uses: actions/download-artifact@v3
        with:
          name: signed-${{ needs.extract_tag.outputs.tag_name }}
          path: ./

      - name: "Show All"
        run: |
          sudo apt update && sudo apt install tree -y && sudo tree ./

      - name: CheckSum
        run: |
          for file in *; do
            if [ -f $file ]; then
              sha256sum $file >> checksums.txt
            fi
          done

      - name: Release public files
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.extract_tag.outputs.tag_name }}
          tag_name: ${{ needs.extract_tag.outputs.tag_name }}
          files: |
            checksums.txt
            *.tar.gz
            *.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-southeast-1"
        run: |
          for ext in tar.gz zip; do
            for file in *.$ext; do
              if [ -f "$file" ]; then
                aws s3 cp "$file" s3://zhangliang-s3-test/test2/$file
              fi
            done
          done
